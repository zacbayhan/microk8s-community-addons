#!/usr/bin/env bash
# shellcheck disable=SC1091
set -euo pipefail
source "$SNAP/actions/common/utils.sh"

# MicroK8s variables.
kubectl="$SNAP/microk8s-kubectl.wrapper"

function error() {
	# local variable.
	local date_time
	date_time=$(date +'%d-%m-%Y-T%H:%M:%S%z')

	echo "[$date_time]: $*" >&2
}

function main() {
	set_prerequisites
}

# enable microk8s add-on dependencies
# (dns, hostpath-storage, helm3) that
# are required for Ondat to run.
function set_prerequisites() {
	# local variables.
	local enable_addon
	enable_addon="$SNAP/microk8s-enable.wrapper"

	# enable Ondat add-on dependencies.
	echo "Enabling CoreDNS for Service Discovery..."
	"$enable_addon" dns
	echo "Enabling Hostpath Storage for Ondat's etcd Cluster..."
	"$enable_addon" hostpath-storage
	echo "Enabling Helm 3 Package Manager to deploy the Ondat Helm Chart..."
	"$enable_addon" helm3
	echo "Ondat dependency add-ons enabled..."
	deploy_ondat
}

# ***
# install Ondat into a microk8s cluster
# through the official Helm chart.
# ***
function deploy_ondat() {
	# local variables.
	local get_node_count
	local helm
	local ondat_namespace
	local etcd_cluster_storage_class
	local etcd_cluster_storage_size
	local etcd_cluster_requests_cpu
	local etcd_cluster_requests_memory

	get_node_count=$("$SNAP"/microk8s-kubectl.wrapper get nodes --no-headers | wc -l)
	helm="$SNAP/microk8s-helm3.wrapper"
	ondat_namespace="storageos"
	etcd_cluster_storage_class="microk8s-hostpath"
	etcd_cluster_storage_size="6Gi"
	etcd_cluster_requests_cpu="100m"
	etcd_cluster_requests_memory="300Mi"

	# Setup Ondat Helm chart repository.
	"$helm" repo add ondat https://ondat.github.io/charts
	"$helm" repo update

	# Install Ondat.
	if [[ "$get_node_count" -le "2" ]]; then
		echo "Detected: $get_node_count node(s)..."
		echo "Enabling 'Ondat' add-on with '1' etcd replica..."
		"$helm" install ondat ondat/ondat \
			--create-namespace \
			--namespace="$ondat_namespace" \
			--set etcd-cluster-operator.cluster.storageclass="$etcd_cluster_storage_class" \
			--set etcd-cluster-operator.cluster.replicas=1 \
			--set etcd-cluster-operator.cluster.storage="$etcd_cluster_storage_size" \
			--set etcd-cluster-operator.cluster.resources.requests.cpu="$etcd_cluster_requests_cpu" \
			--set etcd-cluster-operator.cluster.resources.requests.memory="$etcd_cluster_requests_memory" # --debug
		"$kubectl" scale --replicas=1 deployment storageos-etcd-controller-manager --namespace="$ondat_namespace"
		echo "Ondat is enabled..."
	elif [[ "$get_node_count" -ge "3" && "$get_node_count" -le "4" ]]; then
		echo "Detected: $get_node_count nodes..."
		echo "Enabling 'Ondat' add-on with '3' etcd replicas..."
		"$helm" install ondat ondat/ondat \
			--create-namespace \
			--namespace="$ondat_namespace" \
			--set etcd-cluster-operator.cluster.storageclass="$etcd_cluster_storage_class" \
			--set etcd-cluster-operator.cluster.replicas=3 \
			--set etcd-cluster-operator.cluster.storage="$etcd_cluster_storage_size" \
			--set etcd-cluster-operator.cluster.resources.requests.cpu="$etcd_cluster_requests_cpu" \
			--set etcd-cluster-operator.cluster.resources.requests.memory="$etcd_cluster_requests_memory" # --debug
		echo "Ondat is enabled..."
	elif [[ "$get_node_count" -ge "5" ]]; then
		echo "Detected: $get_node_count nodes..."
		echo "Enabling 'Ondat' add-on with '5' etcd replicas..."
		"$helm" install ondat ondat/ondat \
			--create-namespace \
			--namespace="$ondat_namespace" \
			--set etcd-cluster-operator.cluster.storageclass="$etcd_cluster_storage_class" \
			--set etcd-cluster-operator.cluster.replicas=5 \
			--set etcd-cluster-operator.cluster.storage="$etcd_cluster_storage_size" \
			--set etcd-cluster-operator.cluster.resources.requests.cpu="$etcd_cluster_requests_cpu" \
			--set etcd-cluster-operator.cluster.resources.requests.memory="$etcd_cluster_requests_memory" # --debug
	else
		error "Cannot install Ondat, check and ensure that your cluster nodes are healthy..."
		exit 1
	fi
	deploy_ondat_cli
}

# ***
# install the Ondat CLI into a microk8s
# cluster to manage and configure Ondat
# resources and conduct Day-2 storage
# operations.
# ***
function deploy_ondat_cli() {
	# local variables.
	local current_directory

	current_directory=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

	# install Ondat CLI.
	echo "Deploying 'Ondat CLI'..."
	"$kubectl" apply --filename="$current_directory"/ondat-cli.yaml
	echo "Ondat CLI is deployed..."
	post_install
}

# ***
# post install guidance and details on how
# to get help or getting started with Ondat.
# ***
function post_install() {
	cat <<EndOfMessage
  *** Getting Started With Ondat ***
    
  Get your free Community edition licence by 
  signing up and register your cluster through 
  Ondat's SaaS platform:
    
    https://portal.ondat.io/
  
  Create your first Ondat volume with your microK8s
  cluster by following the how-to guide below:
    
    https://docs.ondat.io/docs/operations/firstpvc/

  To interact with your Ondat cluster and conduct 
  Day-2 storage operations, use the Ondat CLI that 
  is deployed in your microK8s cluster:
  
    https://docs.ondat.io/docs/reference/cli/#usage
EndOfMessage
}

main "$@"
